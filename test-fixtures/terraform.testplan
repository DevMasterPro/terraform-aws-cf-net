Refreshing Terraform state prior to plan...


The Terraform execution plan has been generated and is shown below.
Resources are shown in alphabetical order for quick scanning. Green resources
will be created (or destroyed and then created if an existing resource
exists), yellow resources are being changed in-place, and red resources
will be destroyed.

Note: You didn't specify an "-out" parameter to save this plan, so when
"apply" is called, Terraform can't guarantee this is what will execute.

[32m+ aws_eip.cf
[0m    allocation_id:     "" => "<computed>"
    association_id:    "" => "<computed>"
    domain:            "" => "<computed>"
    instance:          "" => "<computed>"
    network_interface: "" => "<computed>"
    private_ip:        "" => "<computed>"
    public_ip:         "" => "<computed>"
    vpc:               "" => "1"
[0m
[0m[32m+ aws_route_table.public
[0m    route.#:                                    "" => "1"
    route.2586884343.cidr_block:                "" => "0.0.0.0/0"
    route.2586884343.gateway_id:                "" => "X"
    route.2586884343.instance_id:               "" => ""
    route.2586884343.nat_gateway_id:            "" => ""
    route.2586884343.network_interface_id:      "" => ""
    route.2586884343.vpc_peering_connection_id: "" => ""
    vpc_id:                                     "" => "X"
[0m
[0m[32m+ aws_route_table_association.cfruntime-2a-private
[0m    route_table_id: "" => "X"
    subnet_id:      "" => "${aws_subnet.cfruntime-2a.id}"
[0m
[0m[32m+ aws_route_table_association.cfruntime-2b-private
[0m    route_table_id: "" => "X"
    subnet_id:      "" => "${aws_subnet.cfruntime-2b.id}"
[0m
[0m[32m+ aws_route_table_association.docker
[0m    route_table_id: "" => "X"
    subnet_id:      "" => "${aws_subnet.docker.id}"
[0m
[0m[32m+ aws_route_table_association.lb-public
[0m    route_table_id: "" => "X"
    subnet_id:      "" => "${aws_subnet.lb.id}"
[0m
[0m[32m+ aws_route_table_association.logsearch
[0m    route_table_id: "" => "X"
    subnet_id:      "" => "${aws_subnet.logsearch.id}"
[0m
[0m[32m+ aws_security_group.cf
[0m    description:                          "" => "CF security groups"
    egress.#:                             "" => "1"
    egress.482069346.cidr_blocks.#:       "" => "1"
    egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
    egress.482069346.from_port:           "" => "0"
    egress.482069346.protocol:            "" => "-1"
    egress.482069346.security_groups.#:   "" => "0"
    egress.482069346.self:                "" => "0"
    egress.482069346.to_port:             "" => "0"
    ingress.#:                            "" => "8"
    ingress.1799340084.cidr_blocks.#:     "" => "1"
    ingress.1799340084.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.1799340084.from_port:         "" => "-1"
    ingress.1799340084.protocol:          "" => "icmp"
    ingress.1799340084.security_groups.#: "" => "0"
    ingress.1799340084.self:              "" => "0"
    ingress.1799340084.to_port:           "" => "-1"
    ingress.2214680975.cidr_blocks.#:     "" => "1"
    ingress.2214680975.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2214680975.from_port:         "" => "80"
    ingress.2214680975.protocol:          "" => "tcp"
    ingress.2214680975.security_groups.#: "" => "0"
    ingress.2214680975.self:              "" => "0"
    ingress.2214680975.to_port:           "" => "80"
    ingress.2541437006.cidr_blocks.#:     "" => "1"
    ingress.2541437006.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2541437006.from_port:         "" => "22"
    ingress.2541437006.protocol:          "" => "tcp"
    ingress.2541437006.security_groups.#: "" => "0"
    ingress.2541437006.self:              "" => "0"
    ingress.2541437006.to_port:           "" => "22"
    ingress.2617001939.cidr_blocks.#:     "" => "1"
    ingress.2617001939.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.2617001939.from_port:         "" => "443"
    ingress.2617001939.protocol:          "" => "tcp"
    ingress.2617001939.security_groups.#: "" => "0"
    ingress.2617001939.self:              "" => "0"
    ingress.2617001939.to_port:           "" => "443"
    ingress.3214867474.cidr_blocks.#:     "" => "1"
    ingress.3214867474.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.3214867474.from_port:         "" => "4443"
    ingress.3214867474.protocol:          "" => "tcp"
    ingress.3214867474.security_groups.#: "" => "0"
    ingress.3214867474.self:              "" => "0"
    ingress.3214867474.to_port:           "" => "4443"
    ingress.3383195172.cidr_blocks.#:     "" => "1"
    ingress.3383195172.cidr_blocks.0:     "" => "0.0.0.0/0"
    ingress.3383195172.from_port:         "" => "4222"
    ingress.3383195172.protocol:          "" => "tcp"
    ingress.3383195172.security_groups.#: "" => "0"
    ingress.3383195172.self:              "" => "0"
    ingress.3383195172.to_port:           "" => "25777"
    ingress.3472572478.cidr_blocks.#:     "" => "0"
    ingress.3472572478.from_port:         "" => "0"
    ingress.3472572478.protocol:          "" => "udp"
    ingress.3472572478.security_groups.#: "" => "0"
    ingress.3472572478.self:              "" => "1"
    ingress.3472572478.to_port:           "" => "65535"
    ingress.3544538468.cidr_blocks.#:     "" => "0"
    ingress.3544538468.from_port:         "" => "0"
    ingress.3544538468.protocol:          "" => "tcp"
    ingress.3544538468.security_groups.#: "" => "0"
    ingress.3544538468.self:              "" => "1"
    ingress.3544538468.to_port:           "" => "65535"
    name:                                 "" => "cf--X"
    owner_id:                             "" => "<computed>"
    tags.#:                               "" => "1"
    tags.Name:                            "" => "cf--X"
    vpc_id:                               "" => "X"
[0m
[0m[32m+ aws_subnet.cfruntime-2a
[0m    availability_zone:       "" => "us-west-2a"
    cidr_block:              "" => "10.10.3.0/24"
    map_public_ip_on_launch: "" => "0"
    tags.#:                  "" => "1"
    tags.Name:               "" => "cf1"
    vpc_id:                  "" => "X"
[0m
[0m[32m+ aws_subnet.cfruntime-2b
[0m    availability_zone:       "" => "us-west-2a"
    cidr_block:              "" => "10.10.4.0/24"
    map_public_ip_on_launch: "" => "0"
    tags.#:                  "" => "1"
    tags.Name:               "" => "cf2"
    vpc_id:                  "" => "X"
[0m
[0m[32m+ aws_subnet.docker
[0m    availability_zone:       "" => "us-west-2a"
    cidr_block:              "" => "10.10.5.0/24"
    map_public_ip_on_launch: "" => "0"
    tags.#:                  "" => "1"
    tags.Name:               "" => "docker"
    vpc_id:                  "" => "X"
[0m
[0m[32m+ aws_subnet.lb
[0m    availability_zone:       "" => "us-west-2a"
    cidr_block:              "" => "10.10.2.0/24"
    map_public_ip_on_launch: "" => "0"
    tags.#:                  "" => "1"
    tags.Name:               "" => "lb"
    vpc_id:                  "" => "X"
[0m
[0m[32m+ aws_subnet.logsearch
[0m    availability_zone:       "" => "us-west-2a"
    cidr_block:              "" => "10.10.7.0/24"
    map_public_ip_on_launch: "" => "0"
    tags.#:                  "" => "1"
    tags.Name:               "" => "logsearch"
    vpc_id:                  "" => "X"
[0m
[0m
[0m[1mPlan:[0m 13 to add, 0 to change, 0 to destroy.[0m
